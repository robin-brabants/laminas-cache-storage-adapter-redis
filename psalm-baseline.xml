<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.18.0@b113f3ed0259fd6e212d87c3df80eec95a6abf19">
  <file src="benchmark/RedisClusterStorageAdapterBench.php">
    <UnusedClass>
      <code>RedisClusterStorageAdapterBench</code>
    </UnusedClass>
  </file>
  <file src="benchmark/RedisClusterWithIgbinarySerializerStorageAdapterBench.php">
    <UnusedClass>
      <code>RedisClusterWithIgbinarySerializerStorageAdapterBench</code>
    </UnusedClass>
  </file>
  <file src="benchmark/RedisClusterWithPhpSerializerStorageAdapterBench.php">
    <UnusedClass>
      <code>RedisClusterWithPhpSerializerStorageAdapterBench</code>
    </UnusedClass>
  </file>
  <file src="benchmark/RedisStorageAdapterBench.php">
    <UnusedClass>
      <code>RedisStorageAdapterBench</code>
    </UnusedClass>
  </file>
  <file src="src/Exception/InvalidRedisClusterConfigurationException.php">
    <PossiblyUnusedMethod>
      <code>fromInvalidSeedsConfiguration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Redis.php">
    <InvalidArgument>
      <code>$ttl</code>
      <code>$ttl</code>
      <code>$ttl</code>
      <code>$ttl</code>
    </InvalidArgument>
    <InvalidOperand>
      <code>$pttl</code>
      <code>$pttl</code>
    </InvalidOperand>
    <InvalidReturnStatement>
      <code><![CDATA[$redis->decrBy($this->namespacePrefix . $normalizedKey, $value)]]></code>
      <code><![CDATA[$redis->incrBy($this->namespacePrefix . $normalizedKey, $value)]]></code>
      <code>$success</code>
      <code>$success</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>bool</code>
      <code>bool</code>
      <code>int|bool</code>
      <code>int|bool</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>parent::setOptions($options)</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code><![CDATA[$this->preSerialize($value)]]></code>
      <code><![CDATA[$this->preSerialize($value)]]></code>
      <code><![CDATA[$this->preSerialize($value)]]></code>
      <code><![CDATA[$this->preSerialize($value)]]></code>
      <code>$value</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$normalizedKeys</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType>
      <code>RedisOptions</code>
      <code>int|float</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$normalizedKey</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$info['used_memory']]]></code>
      <code><![CDATA[$this->options]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$options</code>
      <code>$options</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>Redis</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$redis->keys($prefix . '*')]]></code>
      <code><![CDATA[$redis->keys($prefix . '*')]]></code>
      <code>$results</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall>
      <code>exec</code>
      <code>setex</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullArgument>
      <code><![CDATA[$this->resourceId]]></code>
      <code><![CDATA[$this->resourceId]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getResource</code>
      <code>getVersion</code>
    </PossiblyNullReference>
    <PossiblyUnusedReturnValue>
      <code>Redis</code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code>Redis</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod>
      <code>$info</code>
    </UndefinedMethod>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$initialized = &$this->initialized]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="src/Redis/AdapterPluginManagerDelegatorFactory.php">
    <UnusedParam>
      <code>$container</code>
      <code>$name</code>
    </UnusedParam>
  </file>
  <file src="src/Redis/Module.php">
    <UnusedClass>
      <code>Module</code>
    </UnusedClass>
  </file>
  <file src="src/RedisCluster.php">
    <MoreSpecificImplementedParamType>
      <code>$options</code>
      <code>$options</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUnusedReturnValue>
      <code>bool</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/RedisClusterOptions.php">
    <PossiblyUnusedMethod>
      <code>setName</code>
      <code>setNamespaceSeparator</code>
      <code>setPassword</code>
      <code>setPersistent</code>
      <code>setReadTimeout</code>
      <code>setSeeds</code>
      <code>setSslContext</code>
      <code>setTimeout</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/RedisOptions.php">
    <LessSpecificReturnStatement>
      <code>parent::setNamespace($namespace)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>RedisOptions</code>
    </MoreSpecificReturnType>
    <PossiblyUnusedReturnValue>
      <code>RedisOptions</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/RedisResourceManager.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['Redis']]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code>$server instanceof Traversable</code>
      <code>is_array($resource)</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement>
      <code>$info</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>array{redis_version:string}</code>
    </InvalidReturnType>
    <MissingReturnType>
      <code>normalizeLibOptionKey</code>
      <code>normalizeLibOptions</code>
      <code>normalizePersistentId</code>
      <code>normalizeServer</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$key</code>
    </MixedArgument>
    <NoValue>
      <code>$server</code>
    </NoValue>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$server['host']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedMethod>
      <code>getMayorVersion</code>
      <code>removeResource</code>
      <code>setLibOption</code>
    </PossiblyUnusedMethod>
    <RedundantCast>
      <code><![CDATA[(int) $server['port']]]></code>
    </RedundantCast>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$resource                = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource             = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="test/integration/Laminas/RedisFromExtensionAsset.php">
    <PossiblyUnusedProperty>
      <code>$socket</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="test/integration/Laminas/RedisTest.php">
    <MixedArgument>
      <code><![CDATA[$this->storage->getItem('key')]]></code>
      <code><![CDATA[$this->storage->getMetadata($key)['ttl']]]></code>
    </MixedArgument>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$this->storage->getMetadata($key)['ttl']]]></code>
      <code><![CDATA[$this->storage->getMetadata($key)['ttl']]]></code>
    </PossiblyInvalidArrayAccess>
    <UndefinedMethod>
      <code><![CDATA[$redis->info()]]></code>
    </UndefinedMethod>
  </file>
  <file src="test/unit/RedisResourceManagerTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['Redis']]></code>
      <code><![CDATA['Redis']]></code>
    </ArgumentTypeCoercion>
  </file>
</files>
